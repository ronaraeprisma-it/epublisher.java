<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- Scans within the base package of the application for @Components to
    configure as beans -->
    <!-- @Controller, @Service, @Configuration, etc. -->
    <context:component-scan base-package="nl.prismait.epublisher.java.api" />
    <context:component-scan base-package="nl.prismait.epublisher.java.business" />
    <context:component-scan base-package="nl.prismait.epublisher.java.web.content" />

    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven />

    <context:property-placeholder location="classpath:application.properties" ignore-unresolvable="true"/>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/api/**" />
            <bean class="nl.prismait.epublisher.java.api.ApiKeyInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- freemarker config -->
<!--    <bean id="freemarkerConfig"-->
<!--          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">-->
<!--        <property name="templateLoaderPaths">-->
<!--            <list>-->
<!--                <value>/WEB-INF/views/</value>-->
<!--                <value>classpath*:templates/</value>-->
<!--            </list> </property>-->
<!--        <property name="defaultEncoding" value="UTF-8" />-->
<!--    </bean>-->

    <!-- View resolvers can also be configured with ResourceBundles or XML files.
        If you need different view resolving based on Locale, you have to use the
        resource bundle resolver. -->
<!--    <bean id="viewResolver"-->
<!--          class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">-->
<!--        <property name="cache" value="true" />-->
<!--        <property name="prefix" value="" />-->
<!--        <property name="suffix" value=".ftl" />-->
<!--        <property name="contentType" value="text/html;charset=UTF-8"/>-->
<!--    </bean>-->

</beans>